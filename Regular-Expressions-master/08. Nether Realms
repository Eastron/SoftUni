using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;



namespace Task_01
{
    class Program
    {
        public static void Main()
        {
            Dictionary<string, Dictionary<long, double>> demons = new Dictionary<string, Dictionary<long, double>>();

            string[] names = Console.ReadLine().Split(new char[] { ',', '\t', ' '},StringSplitOptions.RemoveEmptyEntries);

            foreach (var name in names)
            {
                demons.Add(name.Trim(), new Dictionary<long, double>());

                var regex = @"[^0-9+\-*\/.]";
                var matches = Regex.Matches(name, regex);
                long sum = 0;
                
                foreach (var letters in matches)
                {
                    string currentChar = letters.ToString();
                    sum += currentChar[0];
                }
                demons[name].Add(sum, 0);

                regex = @"-?[0-9]*[.]?[0-9]+";
                matches = Regex.Matches(name, regex);
                double sums = 0;

                foreach (var digit in matches)
                {
                    string currentInt = digit.ToString();
                    double num = double.Parse(currentInt);
                    sums += num;
                }
                
                regex = @"[*|\/]";
                matches = Regex.Matches(name, regex);
                foreach (var symbol in matches)
                {
                    string currentSymbol = symbol.ToString();
                    if (currentSymbol == "*")
                    {
                        sums *= 2;
                    }
                    if (currentSymbol == "/")
                    {
                        sums /= 2.00;
                    }
                }

                demons[name][sum] = sums;
            }

            foreach (var demon in demons.OrderBy(x => x.Key))
            {
                foreach (var kvp in demon.Value)
                {
                    Console.WriteLine("{0} - {1} health, {2:F2} damage", demon.Key, kvp.Key, kvp.Value);
                }
            }

        }
    }
}
